package com.example.cyberproject;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.io.IOException;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.MultipartBody;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

public class MainActivity extends AppCompatActivity {
    private FirebaseAuth mAuth;
    private DatabaseReference mDatabase;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        final Button login_button = findViewById(R.id.login);
        final Button play_as_guest_button = findViewById(R.id.play_as_guest);
        login_button.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                final EditText email = findViewById(R.id.email);
                EditText password = findViewById(R.id.password);
                OkHttpClient client = new OkHttpClient();

                String url = "http://192.168.1.29:12345/";

                RequestBody requestBody = new MultipartBody.Builder()
                        .setType(MultipartBody.FORM)
                        .addFormDataPart("email", "moshe")
                        .build();

                Request request = new Request.Builder()
                        .url(url)
                        .post(requestBody)
                        .build();

                client.newCall(request).enqueue(new Callback() {
                    @Override
                    public void onFailure(Call call, IOException e) {
                        e.printStackTrace();
                    }

                    @Override
                    public void onResponse(Call call, Response response) throws IOException {
                        if (response.isSuccessful()) {
                            final String myResponse = response.body().string();

                            MainActivity.this.runOnUiThread(new Runnable() {
                                @Override
                                public void run() {
                                    email.setText(myResponse);
                                }
                            });
                        }
                    }
                });

                try {
                    Auth(email.getText().toString(), password.getText().toString());
                }
                catch (Exception e) {
                    login_button.setText("Try Again");
                }
            }
        });
        play_as_guest_button.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                EditText email = findViewById(R.id.email);
                play_as_guest_button.setText(email.getText().toString());
            }
        });
    }

    private void Auth(final String email, final String password) {
        final Button login_button = findViewById(R.id.login);
        mAuth = FirebaseAuth.getInstance();
        mAuth.signInWithEmailAndPassword(email, password)
                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                    @Override
                    public void onComplete(@NonNull Task<AuthResult> task) {
                        if (task.isSuccessful()) {
                            // Sign in success, update UI with the signed-in user's information
                            FirebaseUser user = mAuth.getCurrentUser();
                            String token = user.getUid();
                            Room(token, email);
                        } else {
                            // If sign in fails, display a message to the user.
                            login_button.setText("Try Again");
                            // ...
                        }
                        // ...
                    }
                });
    }

    public void Room(final String token, final String email) {
        setContentView(R.layout.activity_room);
        final Button join_button = findViewById(R.id.join);
        join_button.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                mDatabase = FirebaseDatabase.getInstance().getReference();
                EditText game_room_text = findViewById(R.id.game_room);
                //String game_room = "p" + game_room_text.getText().toString();
                final int game_room = Integer.parseInt(game_room_text.getText().toString());
                DatabaseReference mPostReference = mDatabase;
                ValueEventListener postListener = new ValueEventListener() {
                    @Override
                    public void onDataChange(DataSnapshot dataSnapshot) {
                        String started = "1";
                        try {
                            started = dataSnapshot.child("rooms").child(String.valueOf(game_room)).child("started").getValue().toString();
                        }
                        catch (Exception e) {
                            started = "1";
                        }
                        if (started == "0" || started.equals("0")) {
                            mDatabase.child("users").child(token).child("game room").setValue(game_room);
                            mDatabase.child("rooms").child(String.valueOf(game_room)).child("users_in").child(token).setValue(email);
                        }
                        else {
                            join_button.setText("TRY AGAIN");
                        }
                    }

                    @Override
                    public void onCancelled(DatabaseError databaseError) {
                        // Getting Post failed, log a message
                        // ...
                    }
                };
                mPostReference.addValueEventListener(postListener);
            }
        });
    }

    public void Game(final String token, final String email) {

    }
}
